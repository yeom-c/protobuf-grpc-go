// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.12
// source: protos/battle_user/battle_user.proto

package battle_user

import (
	context "context"
	model "github.com/yeom-c/protobuf-grpc-go/gen/golang/protos/model"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BattleUserServiceClient is the client API for BattleUserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BattleUserServiceClient interface {
	GetRankerList(ctx context.Context, in *model.Empty, opts ...grpc.CallOption) (*GetRankerListRes, error)
}

type battleUserServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBattleUserServiceClient(cc grpc.ClientConnInterface) BattleUserServiceClient {
	return &battleUserServiceClient{cc}
}

func (c *battleUserServiceClient) GetRankerList(ctx context.Context, in *model.Empty, opts ...grpc.CallOption) (*GetRankerListRes, error) {
	out := new(GetRankerListRes)
	err := c.cc.Invoke(ctx, "/battle_user.BattleUserService/GetRankerList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BattleUserServiceServer is the server API for BattleUserService service.
// All implementations must embed UnimplementedBattleUserServiceServer
// for forward compatibility
type BattleUserServiceServer interface {
	GetRankerList(context.Context, *model.Empty) (*GetRankerListRes, error)
	mustEmbedUnimplementedBattleUserServiceServer()
}

// UnimplementedBattleUserServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBattleUserServiceServer struct {
}

func (UnimplementedBattleUserServiceServer) GetRankerList(context.Context, *model.Empty) (*GetRankerListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRankerList not implemented")
}
func (UnimplementedBattleUserServiceServer) mustEmbedUnimplementedBattleUserServiceServer() {}

// UnsafeBattleUserServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BattleUserServiceServer will
// result in compilation errors.
type UnsafeBattleUserServiceServer interface {
	mustEmbedUnimplementedBattleUserServiceServer()
}

func RegisterBattleUserServiceServer(s grpc.ServiceRegistrar, srv BattleUserServiceServer) {
	s.RegisterService(&BattleUserService_ServiceDesc, srv)
}

func _BattleUserService_GetRankerList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BattleUserServiceServer).GetRankerList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/battle_user.BattleUserService/GetRankerList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BattleUserServiceServer).GetRankerList(ctx, req.(*model.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// BattleUserService_ServiceDesc is the grpc.ServiceDesc for BattleUserService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BattleUserService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "battle_user.BattleUserService",
	HandlerType: (*BattleUserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRankerList",
			Handler:    _BattleUserService_GetRankerList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/battle_user/battle_user.proto",
}
