// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: protos/error_res/error_res.proto

package error_res

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Code int32

const (
	Code_ServerErr                                       Code = 0 // 서버 에러
	Code_ServerErrInvalidParameter                       Code = 1
	Code_MatchmakerServerErr                             Code = 100
	Code_MatchmakerServerErrStreamDisconnect             Code = 101
	Code_BattleServerErr                                 Code = 200
	Code_BattleServerErrStreamDisconnect                 Code = 201
	Code_SessionErr                                      Code = 500 // 세션
	Code_SessionErrInvalidSession                        Code = 501 // 세션 만료
	Code_SessionErrEmptySession                          Code = 502 // 세션 없음
	Code_SessionErrInvalidHeader                         Code = 503 // 헤더에 세션정보 없음
	Code_SessionErrEmptyAccountUser                      Code = 504 // 세션에 사용자정보 없음
	Code_MapDataErr                                      Code = 600
	Code_DatabaseErr                                     Code = 700 // 데이터베이스 에러
	Code_StaticDataErr                                   Code = 1100
	Code_StaticDataErrAccountLevel                       Code = 1150
	Code_StaticDataErrAccountLevelNotFound               Code = 1151
	Code_StaticDataErrCommonReward                       Code = 1200
	Code_StaticDataErrCommonRewardNotFound               Code = 1201
	Code_StaticDataErrAsset                              Code = 1250
	Code_StaticDataErrAssetNotFound                      Code = 1251
	Code_StaticDataErrBalance                            Code = 1300
	Code_StaticDataErrBalanceNotFound                    Code = 1301
	Code_StaticDataErrCharacter                          Code = 1350
	Code_StaticDataErrCharacterNotFound                  Code = 1351
	Code_StaticDataErrCharacterGrowth                    Code = 1400
	Code_StaticDataErrCharacterGrowthNotFound            Code = 1401
	Code_StaticDataErrDrop                               Code = 1450
	Code_StaticDataErrDropNotFound                       Code = 1451
	Code_StaticDataErrDropNotFoundCommonType             Code = 1452
	Code_StaticDataErrItem                               Code = 1500
	Code_StaticDataErrItemNotFound                       Code = 1501
	Code_StaticDataErrStart                              Code = 1550
	Code_StaticDataErrStartNotFound                      Code = 1551
	Code_StaticDataErrGacha                              Code = 1600
	Code_StaticDataErrGachaNotFound                      Code = 1601
	Code_StaticDataErrGachaClass                         Code = 1650
	Code_StaticDataErrGachaClassNotFound                 Code = 1651
	Code_StaticDataErrGachaPoolGroup                     Code = 1700
	Code_StaticDataErrGachaPoolGroupNotFound             Code = 1701
	Code_StaticDataErrGachaStackModel                    Code = 1750
	Code_StaticDataErrGachaStackModelNotFound            Code = 1751
	Code_StaticDataErrCharacterCostumeBundle             Code = 1800
	Code_StaticDataErrCharacterCostumeBundleNotFound     Code = 1801
	Code_StaticDataErrSignatureWeapon                    Code = 1850
	Code_StaticDataErrSignatureWeaponNotFound            Code = 1851
	Code_StaticDataErrWeaponGrowth                       Code = 1900
	Code_StaticDataErrWeaponGrowthNotFound               Code = 1901
	Code_StaticDataErrMaterials                          Code = 1950
	Code_StaticDataErrMaterialsNotFound                  Code = 1951
	Code_StaticDataErrTutorialGroup                      Code = 2000
	Code_StaticDataErrTutorialGroupNotFound              Code = 2001
	Code_StaticDataErrFateCard                           Code = 2050
	Code_StaticDataErrFateCardNotFound                   Code = 2051
	Code_StaticDataErrRecipe                             Code = 2100
	Code_StaticDataErrRecipeNotFound                     Code = 2101
	Code_StaticDataErrVstoryOracleBroadcastPool          Code = 2150
	Code_StaticDataErrVstoryOracleBroadcastPoolNotFound  Code = 2151
	Code_StaticDataErrVstoryTimelinePool                 Code = 2200
	Code_StaticDataErrVstoryTimelinePoolNotFound         Code = 2201
	Code_StaticDataErrTier                               Code = 2250
	Code_StaticDataErrTierNotFound                       Code = 2251
	Code_StaticDataErrCostume                            Code = 2300
	Code_StaticDataErrCostumeNotFound                    Code = 2351
	Code_StaticDataErrStoryStage                         Code = 2400
	Code_StaticDataErrStoryStageNotFound                 Code = 2451
	Code_AccountErr                                      Code = 10000 // 계정 서비스
	Code_AccountErrNotFoundAccount                       Code = 10001 // 계정 없음
	Code_AccountErrDuplicateNickname                     Code = 10002 // 중복 닉네임
	Code_AccountUserErr                                  Code = 11000 // 계정 유저 서비스
	Code_AccountUserErrNotFoundAccountUser               Code = 11001 // 계정 유저 없음
	Code_UserErr                                         Code = 12000 // 유저 서비스
	Code_UserErrNotFoundUser                             Code = 12001 // 유저 없음
	Code_UserErrAlreadySaveTutorial                      Code = 12002
	Code_AssetErr                                        Code = 13000 // 재화 서비스
	Code_AssetErrNotFoundAsset                           Code = 13001 // 재화 없음
	Code_AssetErrNotEnoughAsset                          Code = 13002 // 재화 부족
	Code_CharacterErr                                    Code = 14000 // 캐릭터 서비스
	Code_CharacterErrNotFoundCharacter                   Code = 14001 // 캐릭터 없음
	Code_CharacterErrNotExtinctInDeckCharacter           Code = 14002 // 덱 세팅 캐릭터 분해 불가
	Code_ItemErr                                         Code = 15000 // 아이템 서비스
	Code_ItemErrNotFoundItem                             Code = 15001 // 아이템 없음
	Code_ItemErrNotEnoughItem                            Code = 15002 // 아이템 부족
	Code_DeckErr                                         Code = 16000 // 덱 없음
	Code_DeckErrNotFoundDeck                             Code = 16001 // 덱 없음
	Code_DeckErrExceedCountLimit                         Code = 16002 // 덱 제한수 초과
	Code_DeckErrDuplicatedDeck                           Code = 16003 // 중복 이름 or 인덱스
	Code_MailErr                                         Code = 17000 // 메일 서비스
	Code_MailErrNotFoundMail                             Code = 17001 // 메일 없음
	Code_ShopErr                                         Code = 18000 // 상점 서비스
	Code_ShopErrNotFoundShop                             Code = 18001
	Code_ShopCategoryErr                                 Code = 19000 // 상점 카테고리
	Code_ShopCategoryErrNotFoundShopCategory             Code = 19001
	Code_ShopGoodsErr                                    Code = 20000 // 상점 상품
	Code_ShopGoodsErrNotFoundShopGoods                   Code = 20001
	Code_BattleErr                                       Code = 21000
	Code_BattleErrNotFoundChannelId                      Code = 21001
	Code_CostumeErr                                      Code = 22000
	Code_CostumeErrNotFoundCostume                       Code = 22001
	Code_FateCardErr                                     Code = 23000
	Code_FateCardErrNotFoundFateCard                     Code = 23001
	Code_CharacterBroadcastErr                           Code = 24000
	Code_CharacterBroadcastErrNotFoundCharacterBroadcast Code = 24001
	Code_CharacterBroadcastErrNotOnAir                   Code = 24002
	Code_CharacterBroadcastErrAlreadyCompleted           Code = 24003
	Code_BattleResultErr                                 Code = 25000
	Code_BattleResultErrNotFoundBattleResult             Code = 25001
	Code_BattleResultErrAlreadyConfirmed                 Code = 25002
	Code_StoryErr                                        Code = 26000
	Code_StoryErrNotClearedBeforeStory                   Code = 26001
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0:     "ServerErr",
		1:     "ServerErrInvalidParameter",
		100:   "MatchmakerServerErr",
		101:   "MatchmakerServerErrStreamDisconnect",
		200:   "BattleServerErr",
		201:   "BattleServerErrStreamDisconnect",
		500:   "SessionErr",
		501:   "SessionErrInvalidSession",
		502:   "SessionErrEmptySession",
		503:   "SessionErrInvalidHeader",
		504:   "SessionErrEmptyAccountUser",
		600:   "MapDataErr",
		700:   "DatabaseErr",
		1100:  "StaticDataErr",
		1150:  "StaticDataErrAccountLevel",
		1151:  "StaticDataErrAccountLevelNotFound",
		1200:  "StaticDataErrCommonReward",
		1201:  "StaticDataErrCommonRewardNotFound",
		1250:  "StaticDataErrAsset",
		1251:  "StaticDataErrAssetNotFound",
		1300:  "StaticDataErrBalance",
		1301:  "StaticDataErrBalanceNotFound",
		1350:  "StaticDataErrCharacter",
		1351:  "StaticDataErrCharacterNotFound",
		1400:  "StaticDataErrCharacterGrowth",
		1401:  "StaticDataErrCharacterGrowthNotFound",
		1450:  "StaticDataErrDrop",
		1451:  "StaticDataErrDropNotFound",
		1452:  "StaticDataErrDropNotFoundCommonType",
		1500:  "StaticDataErrItem",
		1501:  "StaticDataErrItemNotFound",
		1550:  "StaticDataErrStart",
		1551:  "StaticDataErrStartNotFound",
		1600:  "StaticDataErrGacha",
		1601:  "StaticDataErrGachaNotFound",
		1650:  "StaticDataErrGachaClass",
		1651:  "StaticDataErrGachaClassNotFound",
		1700:  "StaticDataErrGachaPoolGroup",
		1701:  "StaticDataErrGachaPoolGroupNotFound",
		1750:  "StaticDataErrGachaStackModel",
		1751:  "StaticDataErrGachaStackModelNotFound",
		1800:  "StaticDataErrCharacterCostumeBundle",
		1801:  "StaticDataErrCharacterCostumeBundleNotFound",
		1850:  "StaticDataErrSignatureWeapon",
		1851:  "StaticDataErrSignatureWeaponNotFound",
		1900:  "StaticDataErrWeaponGrowth",
		1901:  "StaticDataErrWeaponGrowthNotFound",
		1950:  "StaticDataErrMaterials",
		1951:  "StaticDataErrMaterialsNotFound",
		2000:  "StaticDataErrTutorialGroup",
		2001:  "StaticDataErrTutorialGroupNotFound",
		2050:  "StaticDataErrFateCard",
		2051:  "StaticDataErrFateCardNotFound",
		2100:  "StaticDataErrRecipe",
		2101:  "StaticDataErrRecipeNotFound",
		2150:  "StaticDataErrVstoryOracleBroadcastPool",
		2151:  "StaticDataErrVstoryOracleBroadcastPoolNotFound",
		2200:  "StaticDataErrVstoryTimelinePool",
		2201:  "StaticDataErrVstoryTimelinePoolNotFound",
		2250:  "StaticDataErrTier",
		2251:  "StaticDataErrTierNotFound",
		2300:  "StaticDataErrCostume",
		2351:  "StaticDataErrCostumeNotFound",
		2400:  "StaticDataErrStoryStage",
		2451:  "StaticDataErrStoryStageNotFound",
		10000: "AccountErr",
		10001: "AccountErrNotFoundAccount",
		10002: "AccountErrDuplicateNickname",
		11000: "AccountUserErr",
		11001: "AccountUserErrNotFoundAccountUser",
		12000: "UserErr",
		12001: "UserErrNotFoundUser",
		12002: "UserErrAlreadySaveTutorial",
		13000: "AssetErr",
		13001: "AssetErrNotFoundAsset",
		13002: "AssetErrNotEnoughAsset",
		14000: "CharacterErr",
		14001: "CharacterErrNotFoundCharacter",
		14002: "CharacterErrNotExtinctInDeckCharacter",
		15000: "ItemErr",
		15001: "ItemErrNotFoundItem",
		15002: "ItemErrNotEnoughItem",
		16000: "DeckErr",
		16001: "DeckErrNotFoundDeck",
		16002: "DeckErrExceedCountLimit",
		16003: "DeckErrDuplicatedDeck",
		17000: "MailErr",
		17001: "MailErrNotFoundMail",
		18000: "ShopErr",
		18001: "ShopErrNotFoundShop",
		19000: "ShopCategoryErr",
		19001: "ShopCategoryErrNotFoundShopCategory",
		20000: "ShopGoodsErr",
		20001: "ShopGoodsErrNotFoundShopGoods",
		21000: "BattleErr",
		21001: "BattleErrNotFoundChannelId",
		22000: "CostumeErr",
		22001: "CostumeErrNotFoundCostume",
		23000: "FateCardErr",
		23001: "FateCardErrNotFoundFateCard",
		24000: "CharacterBroadcastErr",
		24001: "CharacterBroadcastErrNotFoundCharacterBroadcast",
		24002: "CharacterBroadcastErrNotOnAir",
		24003: "CharacterBroadcastErrAlreadyCompleted",
		25000: "BattleResultErr",
		25001: "BattleResultErrNotFoundBattleResult",
		25002: "BattleResultErrAlreadyConfirmed",
		26000: "StoryErr",
		26001: "StoryErrNotClearedBeforeStory",
	}
	Code_value = map[string]int32{
		"ServerErr":                                       0,
		"ServerErrInvalidParameter":                       1,
		"MatchmakerServerErr":                             100,
		"MatchmakerServerErrStreamDisconnect":             101,
		"BattleServerErr":                                 200,
		"BattleServerErrStreamDisconnect":                 201,
		"SessionErr":                                      500,
		"SessionErrInvalidSession":                        501,
		"SessionErrEmptySession":                          502,
		"SessionErrInvalidHeader":                         503,
		"SessionErrEmptyAccountUser":                      504,
		"MapDataErr":                                      600,
		"DatabaseErr":                                     700,
		"StaticDataErr":                                   1100,
		"StaticDataErrAccountLevel":                       1150,
		"StaticDataErrAccountLevelNotFound":               1151,
		"StaticDataErrCommonReward":                       1200,
		"StaticDataErrCommonRewardNotFound":               1201,
		"StaticDataErrAsset":                              1250,
		"StaticDataErrAssetNotFound":                      1251,
		"StaticDataErrBalance":                            1300,
		"StaticDataErrBalanceNotFound":                    1301,
		"StaticDataErrCharacter":                          1350,
		"StaticDataErrCharacterNotFound":                  1351,
		"StaticDataErrCharacterGrowth":                    1400,
		"StaticDataErrCharacterGrowthNotFound":            1401,
		"StaticDataErrDrop":                               1450,
		"StaticDataErrDropNotFound":                       1451,
		"StaticDataErrDropNotFoundCommonType":             1452,
		"StaticDataErrItem":                               1500,
		"StaticDataErrItemNotFound":                       1501,
		"StaticDataErrStart":                              1550,
		"StaticDataErrStartNotFound":                      1551,
		"StaticDataErrGacha":                              1600,
		"StaticDataErrGachaNotFound":                      1601,
		"StaticDataErrGachaClass":                         1650,
		"StaticDataErrGachaClassNotFound":                 1651,
		"StaticDataErrGachaPoolGroup":                     1700,
		"StaticDataErrGachaPoolGroupNotFound":             1701,
		"StaticDataErrGachaStackModel":                    1750,
		"StaticDataErrGachaStackModelNotFound":            1751,
		"StaticDataErrCharacterCostumeBundle":             1800,
		"StaticDataErrCharacterCostumeBundleNotFound":     1801,
		"StaticDataErrSignatureWeapon":                    1850,
		"StaticDataErrSignatureWeaponNotFound":            1851,
		"StaticDataErrWeaponGrowth":                       1900,
		"StaticDataErrWeaponGrowthNotFound":               1901,
		"StaticDataErrMaterials":                          1950,
		"StaticDataErrMaterialsNotFound":                  1951,
		"StaticDataErrTutorialGroup":                      2000,
		"StaticDataErrTutorialGroupNotFound":              2001,
		"StaticDataErrFateCard":                           2050,
		"StaticDataErrFateCardNotFound":                   2051,
		"StaticDataErrRecipe":                             2100,
		"StaticDataErrRecipeNotFound":                     2101,
		"StaticDataErrVstoryOracleBroadcastPool":          2150,
		"StaticDataErrVstoryOracleBroadcastPoolNotFound":  2151,
		"StaticDataErrVstoryTimelinePool":                 2200,
		"StaticDataErrVstoryTimelinePoolNotFound":         2201,
		"StaticDataErrTier":                               2250,
		"StaticDataErrTierNotFound":                       2251,
		"StaticDataErrCostume":                            2300,
		"StaticDataErrCostumeNotFound":                    2351,
		"StaticDataErrStoryStage":                         2400,
		"StaticDataErrStoryStageNotFound":                 2451,
		"AccountErr":                                      10000,
		"AccountErrNotFoundAccount":                       10001,
		"AccountErrDuplicateNickname":                     10002,
		"AccountUserErr":                                  11000,
		"AccountUserErrNotFoundAccountUser":               11001,
		"UserErr":                                         12000,
		"UserErrNotFoundUser":                             12001,
		"UserErrAlreadySaveTutorial":                      12002,
		"AssetErr":                                        13000,
		"AssetErrNotFoundAsset":                           13001,
		"AssetErrNotEnoughAsset":                          13002,
		"CharacterErr":                                    14000,
		"CharacterErrNotFoundCharacter":                   14001,
		"CharacterErrNotExtinctInDeckCharacter":           14002,
		"ItemErr":                                         15000,
		"ItemErrNotFoundItem":                             15001,
		"ItemErrNotEnoughItem":                            15002,
		"DeckErr":                                         16000,
		"DeckErrNotFoundDeck":                             16001,
		"DeckErrExceedCountLimit":                         16002,
		"DeckErrDuplicatedDeck":                           16003,
		"MailErr":                                         17000,
		"MailErrNotFoundMail":                             17001,
		"ShopErr":                                         18000,
		"ShopErrNotFoundShop":                             18001,
		"ShopCategoryErr":                                 19000,
		"ShopCategoryErrNotFoundShopCategory":             19001,
		"ShopGoodsErr":                                    20000,
		"ShopGoodsErrNotFoundShopGoods":                   20001,
		"BattleErr":                                       21000,
		"BattleErrNotFoundChannelId":                      21001,
		"CostumeErr":                                      22000,
		"CostumeErrNotFoundCostume":                       22001,
		"FateCardErr":                                     23000,
		"FateCardErrNotFoundFateCard":                     23001,
		"CharacterBroadcastErr":                           24000,
		"CharacterBroadcastErrNotFoundCharacterBroadcast": 24001,
		"CharacterBroadcastErrNotOnAir":                   24002,
		"CharacterBroadcastErrAlreadyCompleted":           24003,
		"BattleResultErr":                                 25000,
		"BattleResultErrNotFoundBattleResult":             25001,
		"BattleResultErrAlreadyConfirmed":                 25002,
		"StoryErr":                                        26000,
		"StoryErrNotClearedBeforeStory":                   26001,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_error_res_error_res_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_protos_error_res_error_res_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_protos_error_res_error_res_proto_rawDescGZIP(), []int{0}
}

var File_protos_error_res_error_res_proto protoreflect.FileDescriptor

var file_protos_error_res_error_res_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x2a, 0xbb, 0x1a,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x45, 0x72, 0x72, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45,
	0x72, 0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x10, 0x64, 0x12, 0x27, 0x0a,
	0x23, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x10, 0x65, 0x12, 0x14, 0x0a, 0x0f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x10, 0xc8, 0x01, 0x12, 0x24, 0x0a, 0x1f,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x72, 0x72, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x10,
	0xc9, 0x01, 0x12, 0x0f, 0x0a, 0x0a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x10, 0xf4, 0x03, 0x12, 0x1d, 0x0a, 0x18, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10,
	0xf5, 0x03, 0x12, 0x1b, 0x0a, 0x16, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x10, 0xf6, 0x03, 0x12,
	0x1c, 0x0a, 0x17, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x10, 0xf7, 0x03, 0x12, 0x1f, 0x0a,
	0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x10, 0xf8, 0x03, 0x12, 0x0f,
	0x0a, 0x0a, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x10, 0xd8, 0x04, 0x12,
	0x10, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x45, 0x72, 0x72, 0x10, 0xbc,
	0x05, 0x12, 0x12, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x10, 0xcc, 0x08, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x10, 0xfe, 0x08, 0x12, 0x26, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xff, 0x08, 0x12, 0x1e, 0x0a,
	0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x10, 0xb0, 0x09, 0x12, 0x26, 0x0a,
	0x21, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0xb1, 0x09, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x10, 0xe2, 0x09, 0x12, 0x1f,
	0x0a, 0x1a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xe3, 0x09, 0x12,
	0x19, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x94, 0x0a, 0x12, 0x21, 0x0a, 0x1c, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x95, 0x0a, 0x12, 0x1b, 0x0a,
	0x16, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x10, 0xc6, 0x0a, 0x12, 0x23, 0x0a, 0x1e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xc7, 0x0a, 0x12,
	0x21, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x10,
	0xf8, 0x0a, 0x12, 0x29, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x72, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77,
	0x74, 0x68, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xf9, 0x0a, 0x12, 0x16, 0x0a,
	0x11, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x44, 0x72,
	0x6f, 0x70, 0x10, 0xaa, 0x0b, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0xab, 0x0b, 0x12, 0x28, 0x0a, 0x23, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x44, 0x72, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0xac, 0x0b, 0x12,
	0x16, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x10, 0xdc, 0x0b, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0xdd, 0x0b, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x8e, 0x0c,
	0x12, 0x1f, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x8f,
	0x0c, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x47, 0x61, 0x63, 0x68, 0x61, 0x10, 0xc0, 0x0c, 0x12, 0x1f, 0x0a, 0x1a, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x47, 0x61, 0x63, 0x68, 0x61,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xc1, 0x0c, 0x12, 0x1c, 0x0a, 0x17, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x47, 0x61, 0x63, 0x68,
	0x61, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x10, 0xf2, 0x0c, 0x12, 0x24, 0x0a, 0x1f, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x47, 0x61, 0x63, 0x68, 0x61, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xf3, 0x0c, 0x12,
	0x20, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x47, 0x61, 0x63, 0x68, 0x61, 0x50, 0x6f, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xa4,
	0x0d, 0x12, 0x28, 0x0a, 0x23, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x47, 0x61, 0x63, 0x68, 0x61, 0x50, 0x6f, 0x6f, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xa5, 0x0d, 0x12, 0x21, 0x0a, 0x1c, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x47, 0x61, 0x63, 0x68,
	0x61, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x10, 0xd6, 0x0d, 0x12, 0x29,
	0x0a, 0x24, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x47,
	0x61, 0x63, 0x68, 0x61, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xd7, 0x0d, 0x12, 0x28, 0x0a, 0x23, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x10, 0x88, 0x0e, 0x12, 0x30, 0x0a, 0x2b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x72, 0x72, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x73,
	0x74, 0x75, 0x6d, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0x89, 0x0e, 0x12, 0x21, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x57,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x10, 0xba, 0x0e, 0x12, 0x29, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x10, 0xbb, 0x0e, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x72, 0x72, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x10, 0xec, 0x0e, 0x12, 0x26, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x72, 0x72, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x77, 0x74, 0x68,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xed, 0x0e, 0x12, 0x1b, 0x0a, 0x16, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x73, 0x10, 0x9e, 0x0f, 0x12, 0x23, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x73, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x9f, 0x0f, 0x12, 0x1f, 0x0a,
	0x1a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x54, 0x75,
	0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0xd0, 0x0f, 0x12, 0x27,
	0x0a, 0x22, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x54,
	0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0xd1, 0x0f, 0x12, 0x1a, 0x0a, 0x15, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x46, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x10, 0x82, 0x10, 0x12, 0x22, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x72, 0x72, 0x46, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x83, 0x10, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x10, 0xb4,
	0x10, 0x12, 0x20, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x10, 0xb5, 0x10, 0x12, 0x2b, 0x0a, 0x26, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x72, 0x72, 0x56, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x10, 0xe6, 0x10,
	0x12, 0x33, 0x0a, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72,
	0x72, 0x56, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x10, 0xe7, 0x10, 0x12, 0x24, 0x0a, 0x1f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x56, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x10, 0x98, 0x11, 0x12, 0x2c, 0x0a, 0x27, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x56, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x6f, 0x6c, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x99, 0x11, 0x12, 0x16, 0x0a, 0x11, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x54, 0x69, 0x65, 0x72, 0x10, 0xca,
	0x11, 0x12, 0x1e, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x54, 0x69, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xcb,
	0x11, 0x12, 0x19, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x72, 0x72, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x10, 0xfc, 0x11, 0x12, 0x21, 0x0a, 0x1c,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x73,
	0x74, 0x75, 0x6d, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0xaf, 0x12, 0x12,
	0x1c, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x67, 0x65, 0x10, 0xe0, 0x12, 0x12, 0x24, 0x0a,
	0x1f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x53, 0x74,
	0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64,
	0x10, 0x93, 0x13, 0x12, 0x0f, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x72,
	0x72, 0x10, 0x90, 0x4e, 0x12, 0x1e, 0x0a, 0x19, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x10, 0x91, 0x4e, 0x12, 0x20, 0x0a, 0x1b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45,
	0x72, 0x72, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e,
	0x61, 0x6d, 0x65, 0x10, 0x92, 0x4e, 0x12, 0x13, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x10, 0xf8, 0x55, 0x12, 0x26, 0x0a, 0x21, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x10, 0xf9, 0x55, 0x12, 0x0c, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x10, 0xe0,
	0x5d, 0x12, 0x18, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x10, 0xe1, 0x5d, 0x12, 0x1f, 0x0a, 0x1a, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x61, 0x76,
	0x65, 0x54, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x10, 0xe2, 0x5d, 0x12, 0x0d, 0x0a, 0x08,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x45, 0x72, 0x72, 0x10, 0xc8, 0x65, 0x12, 0x1a, 0x0a, 0x15, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x10, 0xc9, 0x65, 0x12, 0x1b, 0x0a, 0x16, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x10, 0xca, 0x65, 0x12, 0x11, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x10, 0xb0, 0x6d, 0x12, 0x22, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x10, 0xb1, 0x6d, 0x12, 0x2a, 0x0a, 0x25, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x45, 0x78,
	0x74, 0x69, 0x6e, 0x63, 0x74, 0x49, 0x6e, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x10, 0xb2, 0x6d, 0x12, 0x0c, 0x0a, 0x07, 0x49, 0x74, 0x65, 0x6d, 0x45,
	0x72, 0x72, 0x10, 0x98, 0x75, 0x12, 0x18, 0x0a, 0x13, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x99, 0x75, 0x12,
	0x19, 0x0a, 0x14, 0x49, 0x74, 0x65, 0x6d, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x6f,
	0x75, 0x67, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x10, 0x9a, 0x75, 0x12, 0x0c, 0x0a, 0x07, 0x44, 0x65,
	0x63, 0x6b, 0x45, 0x72, 0x72, 0x10, 0x80, 0x7d, 0x12, 0x18, 0x0a, 0x13, 0x44, 0x65, 0x63, 0x6b,
	0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x10,
	0x81, 0x7d, 0x12, 0x1c, 0x0a, 0x17, 0x44, 0x65, 0x63, 0x6b, 0x45, 0x72, 0x72, 0x45, 0x78, 0x63,
	0x65, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x10, 0x82, 0x7d,
	0x12, 0x1a, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x6b, 0x45, 0x72, 0x72, 0x44, 0x75, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x10, 0x83, 0x7d, 0x12, 0x0d, 0x0a, 0x07,
	0x4d, 0x61, 0x69, 0x6c, 0x45, 0x72, 0x72, 0x10, 0xe8, 0x84, 0x01, 0x12, 0x19, 0x0a, 0x13, 0x4d,
	0x61, 0x69, 0x6c, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x4d, 0x61,
	0x69, 0x6c, 0x10, 0xe9, 0x84, 0x01, 0x12, 0x0d, 0x0a, 0x07, 0x53, 0x68, 0x6f, 0x70, 0x45, 0x72,
	0x72, 0x10, 0xd0, 0x8c, 0x01, 0x12, 0x19, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x70, 0x45, 0x72, 0x72,
	0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x10, 0xd1, 0x8c, 0x01,
	0x12, 0x15, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x45, 0x72, 0x72, 0x10, 0xb8, 0x94, 0x01, 0x12, 0x29, 0x0a, 0x23, 0x53, 0x68, 0x6f, 0x70, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75,
	0x6e, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x10, 0xb9,
	0x94, 0x01, 0x12, 0x12, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x45,
	0x72, 0x72, 0x10, 0xa0, 0x9c, 0x01, 0x12, 0x23, 0x0a, 0x1d, 0x53, 0x68, 0x6f, 0x70, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x53, 0x68,
	0x6f, 0x70, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x10, 0xa1, 0x9c, 0x01, 0x12, 0x0f, 0x0a, 0x09, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x10, 0x88, 0xa4, 0x01, 0x12, 0x20, 0x0a, 0x1a,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x10, 0x89, 0xa4, 0x01, 0x12, 0x10,
	0x0a, 0x0a, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x10, 0xf0, 0xab, 0x01,
	0x12, 0x1f, 0x0a, 0x19, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x45, 0x72, 0x72, 0x4e, 0x6f,
	0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x75, 0x6d, 0x65, 0x10, 0xf1, 0xab,
	0x01, 0x12, 0x11, 0x0a, 0x0b, 0x46, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64, 0x45, 0x72, 0x72,
	0x10, 0xd8, 0xb3, 0x01, 0x12, 0x21, 0x0a, 0x1b, 0x46, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x64,
	0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x72, 0x64, 0x10, 0xd9, 0xb3, 0x01, 0x12, 0x1b, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72,
	0x10, 0xc0, 0xbb, 0x01, 0x12, 0x35, 0x0a, 0x2f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x10, 0xc1, 0xbb, 0x01, 0x12, 0x23, 0x0a, 0x1d, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x4f, 0x6e, 0x41, 0x69, 0x72, 0x10, 0xc2, 0xbb, 0x01,
	0x12, 0x2b, 0x0a, 0x25, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x45, 0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0xc3, 0xbb, 0x01, 0x12, 0x15, 0x0a,
	0x0f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72,
	0x10, 0xa8, 0xc3, 0x01, 0x12, 0x29, 0x0a, 0x23, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x45, 0x72, 0x72, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0xa9, 0xc3, 0x01, 0x12,
	0x25, 0x0a, 0x1f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45,
	0x72, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x65, 0x64, 0x10, 0xaa, 0xc3, 0x01, 0x12, 0x0e, 0x0a, 0x08, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45,
	0x72, 0x72, 0x10, 0x90, 0xcb, 0x01, 0x12, 0x23, 0x0a, 0x1d, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x45,
	0x72, 0x72, 0x4e, 0x6f, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x10, 0x91, 0xcb, 0x01, 0x42, 0x4c, 0x5a, 0x3e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x65, 0x6f, 0x6d, 0x2d, 0x63,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67,
	0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x73, 0xaa, 0x02, 0x09,
	0x47, 0x72, 0x70, 0x63, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protos_error_res_error_res_proto_rawDescOnce sync.Once
	file_protos_error_res_error_res_proto_rawDescData = file_protos_error_res_error_res_proto_rawDesc
)

func file_protos_error_res_error_res_proto_rawDescGZIP() []byte {
	file_protos_error_res_error_res_proto_rawDescOnce.Do(func() {
		file_protos_error_res_error_res_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_error_res_error_res_proto_rawDescData)
	})
	return file_protos_error_res_error_res_proto_rawDescData
}

var file_protos_error_res_error_res_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_error_res_error_res_proto_goTypes = []interface{}{
	(Code)(0), // 0: error_res.Code
}
var file_protos_error_res_error_res_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protos_error_res_error_res_proto_init() }
func file_protos_error_res_error_res_proto_init() {
	if File_protos_error_res_error_res_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_error_res_error_res_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_error_res_error_res_proto_goTypes,
		DependencyIndexes: file_protos_error_res_error_res_proto_depIdxs,
		EnumInfos:         file_protos_error_res_error_res_proto_enumTypes,
	}.Build()
	File_protos_error_res_error_res_proto = out.File
	file_protos_error_res_error_res_proto_rawDesc = nil
	file_protos_error_res_error_res_proto_goTypes = nil
	file_protos_error_res_error_res_proto_depIdxs = nil
}
